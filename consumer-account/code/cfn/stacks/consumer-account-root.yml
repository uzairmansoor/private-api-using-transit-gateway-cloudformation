AWSTemplateFormatVersion: "2010-09-09"
Description: Cfn driver template to deploy resources on consumer account
Parameters:
  project:
    Type: String
    Description: Project name
    Default: tgwconsumer
  env:
    Type: String
    AllowedValues: [dev, qa, uat, prod]
    Description: Environment name
    Default: dev
  app:
    Type: String
    Description: App name
    Default: app
  s3ArtifactPath:
    Type: String
    Default: "https://tgw-consumer-blog-app-dev-us-east-1-007756798683.s3.amazonaws.com/code/cfn/services"
    Description: Artifact bucket path

Resources:
  vpc:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${s3ArtifactPath}/vpc/vpc-app.yaml"
      Parameters:
        project: !Ref project
        app: !Ref app
        env: !Ref env
        vpcCidrBlock: 10.40.0.0/16 
        publicSubnet1CidrBlock: 10.40.0.0/20
        publicSubnet2CidrBlock: 10.40.16.0/20
        privateSubnet1CidrBlock: 10.40.128.0/20
        privateSubnet2CidrBlock: 10.40.144.0/20
        availabilityZone1: us-east-1a
        availabilityZone2: us-east-1b
        destinationCidrBlock: 0.0.0.0/0
        dnsHostnames: "true"
        dnsSupport: "true"
        mapPublicIp: "true"
      Tags:
        - Key: "project"
          Value: !Ref project
        - Key: "env"
          Value: !Ref env

  transitGatewayAttachment:
    #DependsOn: vpc
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${s3ArtifactPath}/tgw/tgw-app.yaml"
      Parameters:
        project: !Ref project
        app: !Ref app
        env: !Ref env
        transitGateway: tgw-07a28c362b3167fbb
        enableTgwAttachmentDnsSupport: enable
        privateTgwAttachmentSubnetIds: !Join
          - ","
          - - !GetAtt vpc.Outputs.privateSubnet1
            - !GetAtt vpc.Outputs.privateSubnet2
        TgwAttachmentVpcId: !GetAtt vpc.Outputs.vpc

  securityGroup:
    Type: AWS::CloudFormation::Stack
    DependsOn: vpc
    Properties:
      TemplateURL: !Sub "${s3ArtifactPath}/sg/sg-app.yaml"
      Parameters:
        project: !Ref project
        app: !Ref app
        env: !Ref env
        cidrIp: 0.0.0.0/0
        vpcId: !GetAtt vpc.Outputs.vpc
      Tags:
        - Key: "project"
          Value: !Ref project
        - Key: "env"
          Value: !Ref env

  twgRoute:
    DependsOn:
    - vpc
    - transitGatewayAttachment
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${s3ArtifactPath}/routeTable/rt-app.yml"
      Parameters:
        project: !Ref project
        app: !Ref app
        env: !Ref env
        privateRouteTable1: !GetAtt vpc.Outputs.privateRouteTable1
        privateRouteTable2: !GetAtt vpc.Outputs.privateRouteTable2
        publicRouteTable1: !GetAtt vpc.Outputs.publicRouteTable1
        publicRouteTable2: !GetAtt vpc.Outputs.publicRouteTable2
        consumerTgwID: tgw-07a28c362b3167fbb #!GetAtt transitGatewayAttachment.Outputs.transitGatewayAttachment
        sharedVpcCidrBlock: 10.30.0.0/16
  ec2:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${s3ArtifactPath}/ec2/ec2-app.yaml"
      Parameters:
        ec2EnableEndpoint: yes #yes/no
        ec2EndpointIdentifier: !Sub "${project}-${env}-${app}-endpointConnect"
        ec2EndpointPreserveClientIp: true #true/false
        ec2EndpointPrivateSubnetId: !GetAtt vpc.Outputs.privateSubnet1
        ec2EndpointSgIds: !GetAtt securityGroup.Outputs.vpcEc2ConnectSecurityGroup
        project: !Ref project
        app: !Ref app
        env: !Ref env
        imageId: ami-03972092c42e8c0ca
        availabilityZone: us-east-1a
        instanceType: t2.micro
        keyName: !Sub "${project}-${app}-${env}-${AWS::Region}-KP"
        securityGroupId: !GetAtt securityGroup.Outputs.ec2SecurityGroup
        subnetId: !GetAtt vpc.Outputs.privateSubnet1
      Tags:
        - Key: "project"
          Value: !Ref project
        - Key: "env"
          Value: !Ref env
Outputs:
  vpc:
    Description: consumer Account VPC
    Value: !Ref vpc
    Export:
      Name: !Sub "${project}-${env}-vpc-${AWS::StackName}-${AWS::Region}"
  securityGroup:
    Description: Security Group
    Value: !Ref securityGroup
    Export:
      Name: !Sub "${project}-${env}-${app}-securityGroup-${AWS::StackName}-${AWS::Region}"
  # ec2:
  #   Description: EC2 Instance
  #   Value: !Ref ec2
  #   Export:
  #     Name: !Sub "${project}-${env}-${app}-ec2-${AWS::StackName}-${AWS::Region}"
