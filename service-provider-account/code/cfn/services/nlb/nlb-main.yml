AWSTemplateFormatVersion: "2010-09-09"
Description: Driver template to deploy NLB
Parameters:
  project:
    Type: String
    Default: tgwsp
    Description: Project Name
  app:
    Type: String
    Default: app
    Description: App name
  env:
    Type: String
    AllowedValues:
      - dev
      - qa
      - uat
      - prod
    Default: dev
    Description: Environment name
  s3ArtifactPath:
    Type: String
    Default: "https://tgw-sp-blog-app-dev-us-east-1-570720296911.s3.amazonaws.com/code/cfn/services"
    Description: "Artifact bucket path"
Resources:
  nlb:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${s3ArtifactPath}/nlb/nlb-app.yml"
      Parameters:
        project: !Ref project
        app: !Ref app
        env: !Ref env
        vpc: !GetAtt vpcServiceProvider.Outputs.vpc
        subnet1: !GetAtt vpcServiceProvider.Outputs.privateSubnet1
        subnet2: !GetAtt vpcServiceProvider.Outputs.privateSubnet2
        lbIpAddressType: ipv4
        name: !Sub ${project}-${env}-nlb
        scheme: internal
        elbType: network
        deletionProtectionEnabled: false
        crossZoneLBEnabled: false
        tcpPort: "80"
        tcpListenerDefaultActionType: forward
        healthCheckEnabled: true
        healthCheckIntervalSeconds: 30
        healthCheckPort: "traffic-port"
        nlbHealthCheckProtocol: TCP
        healthCheckTimeoutSeconds: 10
        healthyThresholdCount: 3
        ipAddressType: ipv4
        nlbTargetPort: 5000
        nlbTargetProtocol: TCP
        targetType: instance
        stickinessEnabled: false
        targetDeregistrationDelay: 300
        deregistrationConnectionTerminationEnabled: false
        preserveClientIPEnabled: true
        proxyProtocolV2Enabled: false
        targetResourceId: !GetAtt ec2.Outputs.ec2
        targetResource1Port: "5000"
        sgNetworklb: !GetAtt securitygroup.Outputs.sgNetworklb

Outputs:
  nlb:
    Value: !Ref nlb
    Export:
      Name: !Sub "${project}-${app}-${env}-nlb"
