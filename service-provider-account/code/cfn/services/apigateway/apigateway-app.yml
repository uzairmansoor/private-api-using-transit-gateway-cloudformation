AWSTemplateFormatVersion: '2010-09-09'
Description: Template to deploy api gateway 
Parameters:
  project:
    Type: String
    Description: Project Name
  app:
    Type: String
    Description: App name
  env:
    Type: String
    AllowedValues:
      - dev
      - qa
      - uat
      - prod
    Description: Environment name
  apiKeySourceType:
    Type: String
    AllowedValues: [HEADER, AUTHORIZER]
    Description: The source of the API key for metering requests according to a usage plan
  vpcEndpointIds:
    Type: String
    Description: A list of VPC endpoint IDs of an API against which to create Route53 Aliases. It is only supported for PRIVATE endpoint type
    Default: ''
  endpointType:
    Type: String
    Description: A list of endpoint types of an API or its custom domain name.
    AllowedValues: [EDGE, REGIONAL, PRIVATE]
  apiStageName:
    Type: "String"
    Description: API Staging Name
  apiProductsResourcePath:
    Type: "String"
    Description: Resource Path for API
  apiCustomersResourcePath:
    Type: "String"
    Description: Resource Path for API
    Default: ''
  apiGatewayHTTPMethod:
    Type: String
    Description: The HTTP method that clients use to call this method
  apiAuthorizationType:
    Type: String
    Description: The method's authorization type
  connectionId:
    Type: String
    Description: The ID of the VpcLink used for the integration
  methodStatusCode:
    Type: String
    Description: The method response's status code
  integrationConnectionType:
    Type: String
    Description: The type of the network connection to the integration endpoint
    AllowedValues: [INTERNET, VPC_LINK]
  integrationPassthroughBehavior:
    Type: String
    Description: Indicates when API Gateway passes requests to the targeted backend
  integrationTimeoutInMillis:
    Type: String
    Description: Custom timeout between 50 and 29,000 milliseconds
  rootMethodBackendtype:
    Type: String
    Description: The type of backend that your root method is running
  otherMethodsBackendtype:
    Type: String
    Description: The type of backend that your root method is running
  integrationUri:
    Type: String
    Description: The Uniform Resource Identifier (URI) for the integration

Resources:
    apiGatewayRestApi:
        Type: "AWS::ApiGateway::RestApi"
        Properties:
            Name: !Sub "${project}-${env}-${app}-privateapi"
            ApiKeySourceType: !Ref apiKeySourceType
            Policy: 
                    {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Principal": "*",
                          "Action": "execute-api:Invoke",
                          "Resource": !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*/*/*"
                        },
                        {
                          "Effect": "Deny",
                          "Principal": "*",
                          "Action": "execute-api:Invoke",
                          "Resource": !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*/*/*",
                          "Condition": {
                            "StringNotEquals": {
                              "aws:SourceVpce": [
                                !Ref vpcEndpointIds
                              ]
                            }
                          }
                        }
                      ]
                    }
            EndpointConfiguration: 
              Types: 
                - !Ref endpointType
              VpcEndpointIds:
                - !Ref vpcEndpointIds

    apiGatewayStage:
        Type: "AWS::ApiGateway::Stage"
        Properties:
            StageName: !Ref apiStageName
            DeploymentId: !Ref apiGatewayDeployment
            RestApiId: !Ref apiGatewayRestApi

    apiGatewayDeployment:
        DependsOn:
          - apiGatewayRootMethod
          - apiGatewayProductsMethod
        Type: "AWS::ApiGateway::Deployment"
        Properties:
            RestApiId: !Ref apiGatewayRestApi

    apiGatewayProductsResource:
        Type: "AWS::ApiGateway::Resource"
        Properties:
            RestApiId: !Ref apiGatewayRestApi
            PathPart: !Ref apiProductsResourcePath
            ParentId: !GetAtt apiGatewayRestApi.RootResourceId

    apiGatewayCustomersResource:
        Type: "AWS::ApiGateway::Resource"
        Properties:
            RestApiId: !Ref apiGatewayRestApi
            PathPart: !Ref apiCustomersResourcePath
            ParentId: !GetAtt apiGatewayRestApi.RootResourceId


    apiGatewayRootMethod:
        Type: "AWS::ApiGateway::Method"
        Properties:
            RestApiId: !Ref apiGatewayRestApi
            ResourceId: !GetAtt apiGatewayRestApi.RootResourceId
            HttpMethod: !Ref apiGatewayHTTPMethod
            AuthorizationType: !Ref apiAuthorizationType
            RequestParameters: {}
            MethodResponses: 
              - 
                ResponseModels: 
                    "application/json": !Ref apiGatewayEmptyModel
                    "application/json": !Ref apiGatewayErrorModel
                StatusCode: !Ref methodStatusCode
            Integration: 
                CacheNamespace: apiGatewayRestApi.RootResourceId
                ConnectionId: !Ref connectionId
                ConnectionType: !Ref integrationConnectionType
                IntegrationHttpMethod: !Ref apiGatewayHTTPMethod
                IntegrationResponses: 
                  - 
                    ResponseTemplates: {}
                    StatusCode: !Ref methodStatusCode
                PassthroughBehavior: !Ref integrationPassthroughBehavior
                TimeoutInMillis: !Ref integrationTimeoutInMillis
                Type: !Ref rootMethodBackendtype
                Uri: !Sub "http://${integrationUri}"

    apiGatewayProductsMethod:
        Type: "AWS::ApiGateway::Method"
        Properties:
            RestApiId: !Ref apiGatewayRestApi
            ResourceId: !Ref apiGatewayProductsResource
            HttpMethod: !Ref apiGatewayHTTPMethod
            AuthorizationType: !Ref apiAuthorizationType
            RequestParameters: {}
            MethodResponses: 
              - 
                ResponseModels: 
                    "application/json": !Ref apiGatewayEmptyModel
                    "application/json": !Ref apiGatewayErrorModel
                StatusCode: !Ref methodStatusCode
            Integration: 
                CacheNamespace: !Ref apiGatewayProductsResource
                ConnectionId: !Ref connectionId
                ConnectionType: !Ref integrationConnectionType
                IntegrationHttpMethod: !Ref apiGatewayHTTPMethod
                IntegrationResponses: 
                  - 
                    ResponseTemplates: {}
                    StatusCode: !Ref methodStatusCode
                PassthroughBehavior: !Ref integrationPassthroughBehavior
                TimeoutInMillis: !Ref integrationTimeoutInMillis
                Type: !Ref otherMethodsBackendtype
                Uri: !Sub "http://${integrationUri}/${apiProductsResourcePath}"

    apiGatewayCustomersMethod:
        Type: "AWS::ApiGateway::Method"
        Properties:
            RestApiId: !Ref apiGatewayRestApi
            ResourceId: !Ref apiGatewayCustomersResource
            HttpMethod: !Ref apiGatewayHTTPMethod
            AuthorizationType: !Ref apiAuthorizationType
            RequestParameters: {}
            MethodResponses: 
              - 
                ResponseModels: 
                    "application/json": !Ref apiGatewayEmptyModel
                    "application/json": !Ref apiGatewayErrorModel
                StatusCode: !Ref methodStatusCode
            Integration: 
                CacheNamespace: !Ref apiGatewayCustomersResource
                ConnectionId: !Ref connectionId
                ConnectionType: !Ref integrationConnectionType
                IntegrationHttpMethod: !Ref apiGatewayHTTPMethod
                IntegrationResponses: 
                  - 
                    ResponseTemplates: {}
                    StatusCode: !Ref methodStatusCode
                PassthroughBehavior: !Ref integrationPassthroughBehavior
                TimeoutInMillis: !Ref integrationTimeoutInMillis
                Type: !Ref otherMethodsBackendtype
                Uri: !Sub "http://${integrationUri}/${apiCustomersResourcePath}"

    apiGatewayEmptyModel:
        Type: "AWS::ApiGateway::Model"
        Properties:
            RestApiId: !Ref apiGatewayRestApi
            Name: !Sub "${app}empty"
            Description: "This is a default empty schema model"
            Schema: !Sub |
                {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title" : "Empty Schema",
                  "type" : "object"
                }
            ContentType: "application/json"

    apiGatewayErrorModel:
        Type: "AWS::ApiGateway::Model"
        Properties:
            RestApiId: !Ref apiGatewayRestApi
            Name: !Sub "${app}error"
            Description: "This is a default error schema model"
            Schema: !Sub |
                {
                  "$schema" : "http://json-schema.org/draft-04/schema#",
                  "title" : "Error Schema",
                  "type" : "object",
                  "properties" : {
                    "message" : { "type" : "string" }
                  }
                }
            ContentType: "application/json"

Outputs:
  apiGatewayRestApiId:
    Value: !Ref apiGatewayRestApi
    Export:
      Name: !Sub 'apiGatewayRestApiId-${project}-${env}-${app}-${AWS::Region}'
  apiGatewayStageId:
    Value: !Ref apiGatewayStage
    Export:
      Name: !Sub 'apiGatewayStageId-${project}-${env}-${app}-${AWS::Region}'
  apiGatewayDeploymentId:
    Value: !GetAtt apiGatewayDeployment.DeploymentId
    Export:
      Name: !Sub 'apiGatewayDeploymentId-${project}-${env}-${app}-${AWS::Region}'
  apiGatewayProductsResourceId:
    Value: !GetAtt apiGatewayProductsResource.ResourceId
    Export:
      Name: !Sub 'apiGatewayProductsResourceId-${project}-${env}-${app}-${AWS::Region}'
  apiGatewayCustomersResourceId:
    Value: !GetAtt apiGatewayCustomersResource.ResourceId
    Export:
      Name: !Sub 'apiGatewayCustomersResourceId-${project}-${env}-${app}-${AWS::Region}'
  apiGatewayRootMethodId:
    Value: !Ref apiGatewayRootMethod
    Export:
      Name: !Sub 'apiGatewayRootMethod-${project}-${env}-${app}-${AWS::Region}'
  apiGatewayProductsMethod:
    Value: !Ref apiGatewayProductsMethod
    Export:
      Name: !Sub 'apiGatewayProductsMethod-${project}-${env}-${app}-${AWS::Region}'
  apiGatewayCustomersMethod:
    Value: !Ref apiGatewayCustomersMethod
    Export:
      Name: !Sub 'apiGatewayCustomersMethod-${project}-${env}-${app}-${AWS::Region}'
  apiGatewayEmptyModelName:
    Value: !Ref apiGatewayEmptyModel
    Export:
      Name: !Sub 'apiGatewayEmptyModelName-${project}-${env}-${app}-${AWS::Region}'
  apiGatewayErrorModelName:
    Value: !Ref apiGatewayErrorModel
    Export:
      Name: !Sub 'apiGatewayErrorModelName-${project}-${env}-${app}-${AWS::Region}'
